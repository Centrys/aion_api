<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="clean_build" name="javaAPI">  
    <property name="dir.lib" value="lib" />
    <property name="dir.mod" value="mod" />
    <property name="main.build.dir" value="build/main" />
    <property name="main.src.dir" value="src" />
    <property name="test.build.dir" value="build/test" />
    <property name="test.src.dir" value="test" />
    <property name="test.report.dir" value="report" />
    <property name="dir.pack" value="pack" />

    <!-- Paths -->
    <path id="classpath.dependency">
            <pathelement location="${dir.lib}/commons-collections4-4.0.jar" />
            <pathelement location="${dir.lib}/gson-2.7.jar" />
            <pathelement location="${dir.lib}/slf4j-api-1.7.25.jar" />
            <pathelement location="${dir.lib}/logback-core-1.2.3.jar" />
	    <pathelement location="${dir.lib}/logback-classic-1.2.3.jar" />
            <pathelement location="${dir.lib}/protobuf-java-3.5.0.jar" />
            <pathelement location="${dir.lib}/libnsc.jar" />
            <pathelement location="${dir.lib}/libnzmq.jar" />
            <pathelement location="${dir.mod}/modRlp.jar" />
            <pathelement location="${dir.mod}/modAionBase.jar" />
            <pathelement location="${dir.mod}/modCrypto.jar" />
            <pathelement location="${dir.mod}/modLogger.jar" />
    </path>

    <path id="classpath.test">
        <pathelement location="${dir.lib}/junit-4.12.jar"/>
        <pathelement location="${dir.lib}/hamcrest-core-1.3.jar"/>
        <pathelement location="${main.build.dir}"/>
    </path>

    <target name="clean">
        <delete dir="${main.build.dir}" includeEmptyDirs="true" />
        <delete dir="${test.build.dir}" includeEmptyDirs="true" />
        <delete dir="${test.report.dir}" includeEmptyDirs="true" />
        <delete file="${dir.pack}/modAionApi*.jar" />
	<delete file="${dir.mod}/modAionApi*.jar" />
    </target>

    <!-- Build Related -->

    <target name="compile">
        <mkdir dir="${main.build.dir}" />
        <javac
            debug="${compile.debug}"
            debuglevel="source,lines,vars"
	    release="10"
            includeantruntime="false"
            srcdir="${main.src.dir}"
            destdir="${main.build.dir}"
            includes="**/*.java, module-info.java"
            excludes="org/aion/api/server/pb/*.java"
            >
		<classpath>
                        <path refid="classpath.dependency" />
               </classpath>
	</javac>
    </target>

    <target name="build">
        <mkdir dir="${dir.pack}" />	
        <antcall target="compile">
            <param name="compile.debug" value="${compile.debug}"/>
        </antcall>

        <jar
            destfile="modAionApi.jar"
            filesetmanifest="mergewithoutmain"
	    duplicate="preserve"
            basedir="${main.build.dir}"
            >

            <manifest>
		<attribute name="Main-Class" value="org.aion.api.tools.ApiDemo"/>
		<attribute name="Implementation-Vendor" value="The Aion Foundation"/>
		<attribute name="Implementation-Vendor-Id" value="aion.network"/>
                <attribute name="Specification-Title" value="Aion Foundation Java API"/>
            </manifest>	    
	</jar>
        <move includeemptydirs="false" todir="${dir.pack}">
            <file file="modAionApi.jar"/>
        </move>
    </target>

    <target name="build_fatjar" depends="compile, copy-deps" description="package, output to JAR">
      


    </target>


    <target name="clean_build" depends="clean" >
	<antcall target="pre_build" />
        <antcall target="build">
            <param name="compile.debug" value="${compile.debug}"/>
        </antcall>
        <antcall target="build_fatjar">
            <param name="compile.debug" value="${compile.debug}"/>
        </antcall>
	<antcall target="post_pack" />
    </target>

        <target name="pre_build">
                <echo message="execute prebuild script"/>
                <exec executable="/bin/bash">
                        <arg value="./script/prebuild.sh" />
                </exec>
        </target>

        <target name="post_pack">
                <echo message="execute postpack script"/>
                <exec executable="/bin/bash">
                        <arg value="./script/postpack.sh" />
                </exec>
        </target>


    <!--<target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}" />
        <javac
            debug="true"
            debuglevel="source,lines,vars"
            includeantruntime="false"
            srcdir="${test.src.dir}"
            destdir="${test.build.dir}"
            >
            <classpath refid="classpath.test" />
        </javac>
    </target>-->

    <!-- Test Related -->
    <!--<target name="test" depends="test-compile">
        <mkdir dir="${test.report.dir}" />
        <junit
            printsummary="yes"
            haltonfailure="no"
            fork="true"
            >
        <classpath>
            <path refid="classpath.test" />
            <pathelement location="${test.build.dir}" />
        </classpath>
        <formatter type="plain" usefile="false"/>
        <formatter type="xml" />
        <batchtest todir="${test.report.dir}">
            <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
        </batchtest>
        </junit>
    </target>-->

</project>
